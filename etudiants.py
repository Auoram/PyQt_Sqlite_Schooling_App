# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'etudiants.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sqlite3

class Ui_Dialog(object):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(804, 594)
        Dialog.setStyleSheet("background-color:#E3F0AF;")
        
        self.tableWidget = QtWidgets.QTableWidget(Dialog)
        self.tableWidget.setGeometry(QtCore.QRect(50, 260, 441, 271))
        self.tableWidget.setStyleSheet("background-color:white;")
        self.tableWidget.setRowCount(0)
        self.tableWidget.setColumnCount(4)
        self.tableWidget.setHorizontalHeaderLabels(["ID", "Nom", "Email", "Classe ID"])
        self.tableWidget.setObjectName("tableWidget")
        
        self.addbtn = QtWidgets.QPushButton(Dialog)
        self.addbtn.setGeometry(QtCore.QRect(590, 320, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.addbtn.setFont(font)
        self.addbtn.setStyleSheet("background-color:#118B50;color:#FBF6E9;")
        self.addbtn.setObjectName("addbtn")
        
        self.editbtn = QtWidgets.QPushButton(Dialog)
        self.editbtn.setGeometry(QtCore.QRect(590, 400, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.editbtn.setFont(font)
        self.editbtn.setStyleSheet("background-color:#118B50;color:#FBF6E9;")
        self.editbtn.setObjectName("editbtn")
        
        self.deletebtn = QtWidgets.QPushButton(Dialog)
        self.deletebtn.setGeometry(QtCore.QRect(590, 480, 131, 41))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.deletebtn.setFont(font)
        self.deletebtn.setStyleSheet("background-color:#118B50;color:#FBF6E9;")
        self.deletebtn.setObjectName("deletebtn")
        
        self.name = QtWidgets.QLineEdit(Dialog)
        self.name.setGeometry(QtCore.QRect(200, 40, 291, 31))
        self.name.setStyleSheet("background-color:white;")
        self.name.setObjectName("name")
        
        self.email = QtWidgets.QLineEdit(Dialog)
        self.email.setGeometry(QtCore.QRect(200, 100, 291, 31))
        self.email.setStyleSheet("background-color:white;")
        self.email.setObjectName("email")
        
        self.classe_id = QtWidgets.QLineEdit(Dialog)
        self.classe_id.setGeometry(QtCore.QRect(200, 160, 291, 31))
        self.classe_id.setStyleSheet("background-color:white;")
        self.classe_id.setObjectName("classe_id")
        
        self.label = QtWidgets.QLabel(Dialog)
        self.label.setGeometry(QtCore.QRect(50, 40, 150, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label.setFont(font)
        self.label.setStyleSheet("color:#118B50;")
        self.label.setObjectName("label")
        
        self.label_2 = QtWidgets.QLabel(Dialog)
        self.label_2.setGeometry(QtCore.QRect(50, 100, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("color:#118B50;")
        self.label_2.setObjectName("label_2")
        
        self.label_3 = QtWidgets.QLabel(Dialog)
        self.label_3.setGeometry(QtCore.QRect(50, 160, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(11)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color:#118B50;")
        self.label_3.setObjectName("label_3")

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        self.db_connection = sqlite3.connect("school.db")
        self.db_connection.execute("PRAGMA foreign_keys = ON;") 
        self.db_cursor = self.db_connection.cursor()

        self.create_tables()

        self.addbtn.clicked.connect(self.add_etudiant)
        self.editbtn.clicked.connect(self.edit_etudiant)
        self.deletebtn.clicked.connect(self.delete_etudiant)

        self.load_etudiants()

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.addbtn.setText(_translate("Dialog", "Ajouter"))
        self.editbtn.setText(_translate("Dialog", "Modifier"))
        self.deletebtn.setText(_translate("Dialog", "Supprimer"))
        self.label.setText(_translate("Dialog", "Nom de l'étudiant:"))
        self.label_2.setText(_translate("Dialog", "Email:"))
        self.label_3.setText(_translate("Dialog", "Classe ID:"))

    def create_tables(self):
        self.db_cursor.execute("""
            CREATE TABLE IF NOT EXISTS filieres (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT
            )
        """)
        
        self.db_cursor.execute("""
            CREATE TABLE IF NOT EXISTS etudiants (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                name TEXT,
                email TEXT,
                classe_id INTEGER,
                FOREIGN KEY (classe_id) REFERENCES filieres(id)
            )
        """)
        self.db_connection.commit()

    def add_etudiant(self):
        name = self.name.text().strip()
        email = self.email.text().strip()
        classe_id = self.classe_id.text().strip()
        self.db_cursor.execute("SELECT COUNT(*) FROM filieres WHERE id = ?", (classe_id,))
        if self.db_cursor.fetchone()[0] == 0:
            QtWidgets.QMessageBox.warning(None, "Erreur", f"Aucune filière trouvée avec l'ID {classe_id}")
            return
        if name and email and classe_id:
            self.db_cursor.execute("""
                INSERT INTO etudiants (name, email, classe_id)
                VALUES (?, ?, ?)
            """, (name, email, classe_id))
            self.db_connection.commit()
            self.load_etudiants()

    def edit_etudiant(self):
        row = self.tableWidget.currentRow()
        if row >= 0:
            student_id = self.tableWidget.item(row, 0).text()
            new_name = self.name.text().strip()
            new_email = self.email.text().strip()
            new_classe_id = self.classe_id.text().strip()
            if new_name and new_email and new_classe_id:
                self.db_cursor.execute("""
                    UPDATE etudiants
                    SET name = ?, email = ?, classe_id = ?
                    WHERE id = ?
                """, (new_name, new_email, new_classe_id, student_id))
                self.db_connection.commit()
                self.load_etudiants()

    def delete_etudiant(self):
        row = self.tableWidget.currentRow()
        if row >= 0:
            student_id = self.tableWidget.item(row, 0).text()
            self.db_cursor.execute("""
                DELETE FROM etudiants WHERE id = ?
            """, (student_id,))
            self.db_connection.commit()
            self.load_etudiants()

    def load_etudiants(self):
        self.db_cursor.execute("SELECT * FROM etudiants")
        etudiants = self.db_cursor.fetchall()
        self.tableWidget.setRowCount(0)
        for student in etudiants:
            rowPosition = self.tableWidget.rowCount()
            self.tableWidget.insertRow(rowPosition)
            self.tableWidget.setItem(rowPosition, 0, QtWidgets.QTableWidgetItem(str(student[0])))
            self.tableWidget.setItem(rowPosition, 1, QtWidgets.QTableWidgetItem(student[1]))
            self.tableWidget.setItem(rowPosition, 2, QtWidgets.QTableWidgetItem(student[2]))
            self.tableWidget.setItem(rowPosition, 3, QtWidgets.QTableWidgetItem(str(student[3])))

    def closeEvent(self, event):
        self.db_connection.close()
